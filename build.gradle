buildscript {
    repositories {
        mavenCentral()
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url "https://dl.bintray.com/populov/maven" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.0.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// This is used as the docker image prefix (org)
group = 'ssevening'

bootJar {
    baseName = 'gs-spring-boot-docker'
    version = '0.8.8.3'
}
//// tag::task[]
//task buildDocker(type: Docker, dependsOn: build) {
//  applicationName = jar.baseName
//  dockerfile = file('Dockerfile')
//  doFirst {
//    copy {
//      from jar
//      into "${stageDir}/target"
//    }
//  }
//}
//// end::task[]

repositories {
    mavenCentral()
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url "https://repo.spring.io/release" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url 'https://repo.spring.io/libs-snapshot' }
    maven { url "https://m2.neo4j.org/content/repositories/releases/" }
    maven { url "https://dl.bintray.com/populov/maven" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java:8.0.21'

    // add for web use
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    // add for url rewrite filter
    compile 'org.tuckey:urlrewritefilter:4.0.4'
    // // jsoup HTML parser library @ https://jsoup.org/
    compile 'org.jsoup:jsoup:1.13.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.13.3'

    // https://mvnrepository.com/artifact/com.github.dfabulich/sitemapgen4j
    compile group: 'com.github.dfabulich', name: 'sitemapgen4j', version: '1.0.2'

    compile files('libs/jackson-core-asl-1.9.13.jar')
    compile files('libs/jackson-mapper-asl-1.9.13.jar')
    // send mail function start
    compile("javax.mail:javax.mail-api:1.5.6")
    compile("com.sun.mail:javax.mail:1.5.6")
    // send mail function end

    // qrcode start
    compile("com.google.zxing:core:3.1.0")
    compile("com.google.zxing:javase:3.1.0")
    // qrcode end
    // Excel start
    compile("org.apache.poi:poi:3.17")
    compile("org.apache.poi:poi-ooxml:3.17")
    compile("org.apache.poi:poi-ooxml-schemas:3.17")
    // Excel end

    // https://mvnrepository.com/artifact/com.google.code/sitemapgen4j
    compile group: 'com.google.code', name: 'sitemapgen4j', version: '1.0.1'



    testCompile('org.springframework.boot:spring-boot-starter-test')
}

