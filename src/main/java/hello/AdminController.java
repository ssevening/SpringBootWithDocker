package hello;

import hello.dao.BannerRepository;
import hello.dao.ProductRepository;
import hello.dao.UserRepository;
import hello.dao.pojo.BannerInfo;
import hello.dao.pojo.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.Banner;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Calendar;
import java.util.List;

/**
 * // 这个用来做界面的。
 */
@Controller    // This means that this class is a Controller
@RequestMapping(path = "/admin") // This means URL's start with /demo (after Application path)
public class AdminController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Autowired
    private ProductRepository productRepository;

    @Autowired
    private BannerRepository bannerRepository;

    @GetMapping(path = "/addNewBanner") // Map ONLY GET Requests
    public @ResponseBody
    String addNewBanner(@RequestParam String title
            , @RequestParam String description, @RequestParam String bannerUrl, @RequestParam String promotionUrl) {
        BannerInfo bannerInfo = new BannerInfo();
        bannerInfo.setTitle(title);
        bannerInfo.setDescription(description);
        bannerInfo.setBannerUrl(bannerUrl);
        bannerInfo.setPromotionUrl(promotionUrl);
        bannerInfo.setGmtCreate(Calendar.getInstance().getTime());
        bannerInfo.setStatus("online");
        bannerRepository.saveAndFlush(bannerInfo);

        return "200";
    }

    @GetMapping(path = "/addBanner.html")
    public String checkIfCanAddBanner() {
        // checkLogin
        return "addBanner";
    }

    @GetMapping(path = "/listAllBanners") // Map ONLY GET Requests
    public @ResponseBody
    List<BannerInfo> listAddBanner() {
        return bannerRepository.findAll();
    }

    @GetMapping(path = "/deleteBanner") // Map ONLY GET Requests
    public @ResponseBody
    String listAddBanner(@RequestParam Long id) {
        bannerRepository.deleteById(id);
        return "200";
    }

}
